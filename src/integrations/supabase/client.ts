// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://olhdcicquehastcwvieu.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9saGRjaWNxdWVoYXN0Y3d2aWV1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc2NzI5MDksImV4cCI6MjA2MzI0ODkwOX0.hRmOjxiNQ_p5HFeFjpboHW6jV-Dkki2NWfmL6GyUcBU";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  },
  realtime: {
    params: {
      eventsPerSecond: 10,
    },
    // üö´ DESABILITADO: Configura√ß√µes agressivas removidas para evitar piscar
    // heartbeatIntervalMs: 15000, // Reduced for more frequent checks
    // reconnectAfterMs: (tries: number) => Math.min(tries * 1000, 10000), // Faster reconnection
    logger: (level: any, message: string, data?: any) => {
      console.log(`[Supabase Realtime ${level}]`, message, data);
    },
  },
  global: {
    headers: {
      'apikey': SUPABASE_PUBLISHABLE_KEY,
      'Authorization': `Bearer ${SUPABASE_PUBLISHABLE_KEY}`,
    },
  },
});

// üö´ FOR√áA DESABILITA√á√ÉO ULTRA-ROBUSTA: Interceptar cria√ß√£o de canais task-notifications
// SOLU√á√ÉO DEFINITIVA: Bloquear no n√≠vel do client do Supabase
const originalChannel = supabase.channel;
supabase.channel = function(channelName: string, ...args: any[]) {
  // Verificar se √© tentativa de criar canal task-notifications
  if (channelName.includes('task-notifications')) {
    console.warn(`üö´ BLOQUEADO: Tentativa de criar canal task-notifications interceptada: ${channelName}`);
    console.warn(`üö´ MOTIVO: Canal task-notifications foi permanentemente desabilitado para evitar conflitos`);
    
    // Retornar canal fake que n√£o faz nada
    return {
      on: () => ({ subscribe: () => ({ unsubscribe: () => {} }) }),
      subscribe: () => ({ unsubscribe: () => {} }),
      unsubscribe: () => {},
      topic: channelName,
      state: 'closed'
    };
  }
  
  // Para canais n√£o-task-notifications, comportamento normal
  return originalChannel.call(this, channelName, ...args);
};

console.log('üö´ SUPABASE CLIENT: Intercepta√ß√£o de task-notifications instalada');
console.log('üõ°Ô∏è SUPABASE CLIENT: Apenas canais tasks_optimized_* s√£o permitidos');